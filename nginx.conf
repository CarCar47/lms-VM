# ============================================================================
# Nginx Configuration for Moodle 5.1 STABLE
# Optimized for Ubuntu 22.04 LTS with PHP-FPM 8.2
# Industry Standard Configuration
# ============================================================================
#
# This configuration provides an ALTERNATIVE to Apache for Moodle deployment.
# Nginx offers better performance for high-concurrency scenarios.
#
# Prerequisites:
#   - Nginx installed: apt-get install nginx
#   - PHP-FPM 8.2 installed and running
#   - Moodle files in /var/www/html/moodle
#   - SSL certificate (Let's Encrypt recommended)
#
# Installation:
#   1. Copy this file to: /etc/nginx/sites-available/moodle
#   2. Update server_name with your domain
#   3. Update SSL certificate paths (after running ssl-setup.sh)
#   4. Enable site: ln -s /etc/nginx/sites-available/moodle /etc/nginx/sites-enabled/
#   5. Test config: nginx -t
#   6. Reload: systemctl reload nginx
#
# ============================================================================

# Upstream PHP-FPM configuration
upstream php-fpm {
    server unix:/run/php/php8.2-fpm.sock;
    # Alternatively, use TCP socket:
    # server 127.0.0.1:9000;
}

# ============================================================================
# RATE LIMITING ZONES
# ============================================================================
#
# Rate limiting protects against:
# - DDoS attacks
# - Brute force login attempts
# - API abuse
# - Resource exhaustion
#
# Zones use the leaky bucket algorithm:
# - Requests arrive at various rates
# - Leave the bucket at a fixed rate
# - Excess requests are queued (burst) or rejected
#
# Memory usage: 1MB zone = ~16,000 IP addresses (IPv4)
# ============================================================================

# General rate limit: 10 requests/second per IP
# Protects against general abuse and moderate DDoS
limit_req_zone $binary_remote_addr zone=general:10m rate=10r/s;

# Login rate limit: 5 requests/minute per IP
# Protects against brute force login attempts
limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;

# API rate limit: 20 requests/second per IP
# Allows API usage while preventing abuse
limit_req_zone $binary_remote_addr zone=api:10m rate=20r/s;

# Upload rate limit: 2 requests/minute per IP
# Prevents upload flooding
limit_req_zone $binary_remote_addr zone=upload:10m rate=2r/m;

# Connection limit: max 10 concurrent connections per IP
# Prevents connection exhaustion attacks
limit_conn_zone $binary_remote_addr zone=addr:10m;

# Set HTTP status code for rate limit violations
# 429 = Too Many Requests (more semantic than 503)
limit_req_status 429;
limit_conn_status 429;

# Log rate limit violations for monitoring
limit_req_log_level warn;

# ============================================================================
# HTTP Server - Redirect all HTTP to HTTPS
# ============================================================================

server {
    listen 80;
    listen [::]:80;
    server_name _;  # Replace with your domain: example.com www.example.com

    # Allow Let's Encrypt ACME challenge
    location ^~ /.well-known/acme-challenge/ {
        allow all;
        root /var/www/html;
        default_type "text/plain";
    }

    # Redirect all other HTTP requests to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# ============================================================================
# HTTPS Server - Main Moodle Configuration
# ============================================================================

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name _;  # Replace with your domain: example.com www.example.com

    # Document root - Moodle public directory
    # Moodle 5.1 uses /public subdirectory for web-accessible files
    root /var/www/html/moodle/public;
    index index.php index.html;

    # ========================================================================
    # SSL CONFIGURATION
    # ========================================================================

    # SSL certificate paths (update after running ssl-setup.sh)
    ssl_certificate /etc/letsencrypt/live/yourdomain.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/yourdomain.com/privkey.pem;

    # SSL protocols and ciphers (modern, secure configuration)
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers off;

    # SSL session cache (improves performance)
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;

    # OCSP stapling (improves SSL handshake performance)
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_trusted_certificate /etc/letsencrypt/live/yourdomain.com/chain.pem;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;

    # ========================================================================
    # SECURITY HEADERS
    # ========================================================================

    # Prevent clickjacking
    add_header X-Frame-Options "SAMEORIGIN" always;

    # Prevent MIME sniffing
    add_header X-Content-Type-Options "nosniff" always;

    # Enable XSS protection
    add_header X-XSS-Protection "1; mode=block" always;

    # Referrer policy
    add_header Referrer-Policy "no-referrer-when-downgrade" always;

    # Content Security Policy (adjust as needed for Moodle)
    # add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline';" always;

    # HSTS (HTTP Strict Transport Security)
    # Uncomment after SSL is working correctly (forces HTTPS for 1 year)
    # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

    # ========================================================================
    # LOGGING
    # ========================================================================

    access_log /var/log/nginx/moodle-access.log;
    error_log /var/log/nginx/moodle-error.log warn;

    # ========================================================================
    # GZIP COMPRESSION
    # ========================================================================

    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript application/json application/javascript application/xml+rss application/rss+xml font/truetype font/opentype application/vnd.ms-fontobject image/svg+xml;
    gzip_disable "msie6";

    # ========================================================================
    # CLIENT SETTINGS
    # ========================================================================

    # Maximum upload size (matches PHP settings)
    client_max_body_size 100M;

    # Buffer settings
    client_body_buffer_size 128k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 16k;

    # Timeouts
    client_body_timeout 60s;
    client_header_timeout 60s;
    keepalive_timeout 65s;
    send_timeout 60s;

    # ========================================================================
    # PHP-FPM CONFIGURATION
    # ========================================================================

    # Primary PHP handler - all .php files
    location ~ \.php$ {
        # Security: don't execute PHP from writable directories
        location ~ ^/var/moodledata/ {
            deny all;
            return 403;
        }

        include snippets/fastcgi-php.conf;
        fastcgi_pass php-fpm;

        # PHP-FPM parameters
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        fastcgi_param HTTPS on;

        # Increase timeout for long-running Moodle operations
        fastcgi_read_timeout 300s;
        fastcgi_send_timeout 300s;

        # Buffer settings
        fastcgi_buffers 16 16k;
        fastcgi_buffer_size 32k;

        # Hide PHP version
        fastcgi_hide_header X-Powered-By;
    }

    # ========================================================================
    # MOODLE SPECIFIC RULES
    # ========================================================================

    # Main Moodle location
    location / {
        # Apply general rate limiting
        # burst=20: Allow up to 20 requests in burst
        # nodelay: Process burst requests immediately (better UX)
        limit_req zone=general burst=20 nodelay;

        # Limit concurrent connections per IP
        limit_conn addr 10;

        try_files $uri $uri/ /index.php?$query_string;
    }

    # Login endpoint - stricter rate limiting
    location ~ ^/login/(index\.php|token\.php) {
        # Very strict: 5 requests/minute, no burst
        limit_req zone=login burst=2 nodelay;

        include snippets/fastcgi-php.conf;
        fastcgi_pass php-fpm;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_read_timeout 60s;
    }

    # Deny access to moodledata directory
    location ~ ^/var/moodledata/ {
        internal;
        deny all;
    }

    # Deny access to backup directories
    location ~ ^/var/backups/ {
        deny all;
        return 403;
    }

    # Deny access to hidden files (except .well-known for Let's Encrypt)
    location ~ /\.(?!well-known).* {
        deny all;
        return 404;
    }

    # Deny access to sensitive files
    location ~ (config\.php|/lang/.*\.php|/filter/.*\.php|/local/.*\.php) {
        deny all;
        return 403;
    }

    # Deny access to version control files
    location ~ /\.(git|svn|hg) {
        deny all;
        return 404;
    }

    # Deny access to composer files
    location ~ (composer\.json|composer\.lock|package\.json|package-lock\.json) {
        deny all;
        return 404;
    }

    # ========================================================================
    # STATIC FILE CACHING
    # ========================================================================

    # Cache static assets (images, CSS, JS)
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
    }

    # Cache fonts
    location ~* \.(ttf|ttc|otf|eot|woff|woff2)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
    }

    # Don't cache dynamic PHP files
    location ~* \.php$ {
        expires off;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
    }

    # ========================================================================
    # SPECIAL MOODLE ENDPOINTS
    # ========================================================================

    # Repository files (from Moodle file repository)
    location /repository/ {
        rewrite ^/repository/(.*)$ /repository/$1 last;
    }

    # Pluginfile.php - Moodle file serving
    location ~ /pluginfile.php {
        include snippets/fastcgi-php.conf;
        fastcgi_pass php-fpm;
        fastcgi_read_timeout 300s;
    }

    # Web services endpoint
    location /webservice/ {
        # API rate limiting: 20 req/s with moderate burst
        limit_req zone=api burst=40 nodelay;

        try_files $uri $uri/ /webservice/index.php?$query_string;
    }

    # File upload endpoints - strict rate limiting
    location ~ ^/(mod|course)/.*/(upload\.php|file\.php) {
        # Upload rate limiting: 2 req/min with small burst
        limit_req zone=upload burst=5 nodelay;

        include snippets/fastcgi-php.conf;
        fastcgi_pass php-fpm;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_read_timeout 300s;  # Allow time for large uploads
    }

    # ========================================================================
    # HEALTH CHECK ENDPOINT
    # ========================================================================

    location /healthcheck.php {
        access_log off;
        include snippets/fastcgi-php.conf;
        fastcgi_pass php-fpm;
    }

    # Simple Nginx health check
    location /nginx-health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
}

# ============================================================================
# PERFORMANCE TUNING NOTES
# ============================================================================
#
# For high-traffic Moodle installations, consider:
#
# 1. FastCGI Cache (cache PHP output):
#    fastcgi_cache_path /var/cache/nginx/fastcgi levels=1:2 keys_zone=moodle:100m inactive=60m;
#    fastcgi_cache moodle;
#    fastcgi_cache_valid 200 60m;
#    fastcgi_cache_bypass $skip_cache;
#    fastcgi_no_cache $skip_cache;
#
# 2. Increase worker processes in /etc/nginx/nginx.conf:
#    worker_processes auto;
#    worker_connections 1024;
#
# 3. Enable HTTP/3 (QUIC) when available:
#    listen 443 quic reuseport;
#    add_header Alt-Svc 'h3=":443"; ma=86400';
#
# 4. Use Nginx Plus for advanced features:
#    - Advanced load balancing
#    - Live activity monitoring
#    - Dynamic reconfiguration
#
# ============================================================================
# MIGRATION FROM APACHE
# ============================================================================
#
# If migrating from Apache:
#
# 1. Install Nginx and PHP-FPM:
#    apt-get install nginx php8.2-fpm
#
# 2. Stop Apache:
#    systemctl stop apache2
#    systemctl disable apache2
#
# 3. Update Moodle config.php:
#    No changes needed - Nginx works with existing config
#
# 4. Copy this file and configure as described above
#
# 5. Start Nginx:
#    systemctl enable nginx
#    systemctl start nginx
#
# 6. Test thoroughly before disabling Apache permanently
#
# ============================================================================
